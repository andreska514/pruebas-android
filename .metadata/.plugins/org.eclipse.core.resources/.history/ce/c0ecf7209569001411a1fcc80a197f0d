package com.andres.sun4all;

import java.io.BufferedInputStream;
import java.io.InputStream;
import java.lang.ref.WeakReference;
import java.net.URL;
import java.net.URLConnection;

import android.app.Activity;
import android.app.ProgressDialog;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.os.AsyncTask;
import android.os.Bundle;
import android.util.Log;
import android.view.MotionEvent;
import android.view.View;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.Toast;

public class Segunda extends Activity{
	protected void onCreate(Bundle savedInstanceState){
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_segunda);
		
		Button b = (Button)findViewById(R.id.btnProgressBar);
		ImageView im = (ImageView)findViewById(R.id.my_image);
		
		b.setOnClickListener(new View.OnClickListener() {
			
			@Override
			public void onClick(View v) {
				// TODO Auto-generated method stub
				
			}
		});
	}
	private class DownloadImageTask extends AsyncTask<String, Void, Bitmap> {
	    /** Reference to the view which should receive the image */
		ProgressDialog progressDialog;
		Bitmap bitmap;
	    private final WeakReference imageRef;
	    public DownloadImageTask(ImageView imageView) {
	        imageRef = new WeakReference(imageView);
	    }
	 
	    @Override
	    protected void onPreExecute() {
	        super.onPreExecute();
	        progressDialog = ProgressDialog.show(Segunda.this, "Wait", "Downloading...");
	    }
	 
	    @Override
	    protected Bitmap doInBackground(String... params) {
	        InputStream input = null;
	        try {
	            URL url = new URL(params[0]);
	            // We open the connection
	            URLConnection conection = url.openConnection();
	            conection.connect();
	            input = new BufferedInputStream(url.openStream(), 8192);
	            // we convert the inputStream into bitmap
	            bitmap = BitmapFactory.decodeStream(input);
	            input.close();
	        } catch (Exception e) {
	            Log.e("Error: ", e.getMessage());
	        }
	        return bitmap;
	    }
	 
	    /**
	    * After completing background task Dismiss the progress dialog
	    * **/
	    protected void onPostExecute(Bitmap bitmap) {
	        progressDialog.dismiss();
	        if (isCancelled()) {
	            bitmap = null;
	        }
	 
	        if (imageRef != null) {
	            ImageView imageView = (ImageView) imageRef.get();
	            if (imageView != null && bitmap != null) {
	                imageView.setImageBitmap(bitmap);
	            } else
	                Toast.makeText(Segunda.this, "Error while downloading the image!", Toast.LENGTH_LONG).show();
	        }
	    }
	}
}

/*
Button btnShowProgress;
	ImageView my_image;

	// Progress Dialog
	private ProgressDialog pDialog;

	// Progress dialog type (0 - for Horizontal progress bar)
	public static final int progress_bar_type = 0;

	// File url to download
	private static String file_url = "https://pybossa.socientize.eu/sun4all/sunimages/k1v_01_08_03_09h_30_E_C.jpg";


	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_segunda);

		// show progress bar button
		btnShowProgress = (Button) findViewById(R.id.btnProgressBar);
		// Image view to show image after downloading
		my_image = (ImageView) findViewById(R.id.my_image);

		 //* Show Progress bar click event
		btnShowProgress.setOnClickListener(new View.OnClickListener() {

			@Override
			public void onClick(View v) {
				// starting new Async Task
				new DownloadFileFromURL().execute(file_url);
			}
		});
	}
	@Override
	protected Dialog onCreateDialog(int id) {
	    switch (id) {
	    case progress_bar_type:
	        pDialog = new ProgressDialog(this);
	        pDialog.setMessage("Downloading file. Please wait...");
	        pDialog.setIndeterminate(false);
	        pDialog.setMax(100);
	        pDialog.setProgressStyle(ProgressDialog.STYLE_HORIZONTAL);
	        pDialog.setCancelable(true);
	        pDialog.show();
	        return pDialog;
	    default:
	        return null;
	    }
	}
	 //* Background Async Task to download file
	class DownloadFileFromURL extends AsyncTask<String, String, String> {
	 
	     ///* Before starting background thread
	     ///* Show Progress Bar Dialog
	    @Override
	    protected void onPreExecute() {
	        super.onPreExecute();
	        showDialog(progress_bar_type);
	    }
	 
	    
	    // * Downloading file in background thread
	    @Override
	    protected String doInBackground(String... f_url) {
	        int count;
	        try {
	            URL url = new URL(f_url[0]);
	            URLConnection conection = url.openConnection();
	            conection.connect();
	            // getting file length
	            int lenghtOfFile = conection.getContentLength();
	 
	            // input stream to read file - with 8k buffer
	            InputStream input = new BufferedInputStream(url.openStream(), 8192);
	 
	            // Output stream to write file
	            File dir = new File("/sdcard/zSun4all");
	            dir.mkdir();
	            OutputStream output = new FileOutputStream("/sdcard/zSun4all/downloadedfile.jpg");
	 
	            byte data[] = new byte[1024];
	 
	            long total = 0;
	 
	            while ((count = input.read(data)) != -1) {
	                total += count;
	                // publishing the progress....
	                // After this onProgressUpdate will be called
	                publishProgress(""+(int)((total*100)/lenghtOfFile));
	 
	                // writing data to file
	                output.write(data, 0, count);
	            }
	 
	            // flushing output
	            output.flush();
	 
	            // closing streams
	            output.close();
	            input.close();
	 
	        } catch (Exception e) {
	            Log.e("Error: ", e.getMessage());
	        }
	 
	        return null;
	    }
	 
	     // Updating progress bar
	    protected void onProgressUpdate(String... progress) {
	        // setting progress percentage
	        pDialog.setProgress(Integer.parseInt(progress[0]));
	   }
	 
	     // After completing background task
	     // Dismiss the progress dialog
	    @Override
	    protected void onPostExecute(String file_url) {
	        // dismiss the dialog after the file was downloaded
	        dismissDialog(progress_bar_type);
	 
	        // Displaying downloaded image into image view
	        // Reading image path from sdcard
	        String imagePath = Environment.getExternalStorageDirectory().toString() + "/downloadedfile.jpg";
	        // setting downloaded into image view
	        my_image.setImageDrawable(Drawable.createFromPath(imagePath));
	    }
	 
	}
*/